---
- name: Deploy nginx on Docker Swarm with a custom webpage
  hosts: docker_swarm_manager
  become: yes
  tasks:
    - name: Pull nginx image on manager
      command: docker pull nginx:latest

    - name: Check if nginx service exists on manager
      command: docker service ls --filter name=nginx -q
      register: nginx_service_check
      failed_when: false
      changed_when: false

    - name: Remove existing nginx service if it exists on manager
      command: docker service rm nginx
      when: nginx_service_check.stdout != ""
      ignore_errors: false

- name: Deploy nginx on all Docker Swarm nodes
  hosts: docker_swarm_manager,docker_swarm_workers
  become: yes
  tasks:
    - name: Pull nginx image on all nodes
      command: docker pull nginx:latest

    - name: Get local IP on all nodes
      shell: ip -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'
      register: local_ip
      changed_when: false

    - name: Create nginx directory in /etc/nginx.files (if necessary)
      file:
        path: /etc/nginx.files
        state: directory
        mode: '0755'

    - name: Create custom index.html with local IP from the template
      template:
        src: '/HA-web/ansible-playbooks/templates/nginx.files/index.html.j2'
        dest: "/etc/nginx.files/index.html"
        mode: '0644'

    - name: Copy CSS file from the repository to the nginx directory
      copy:
        src: '/HA-web/ansible-playbooks/templates/nginx.files/styles.css'
        dest: "/etc/nginx.files/styles.css"
        mode: '0644'

    - name: Create nginx service in Docker Swarm on all nodes if it was removed
      command: >
        docker service create 
        --name nginx 
        --mode global 
        --publish published=80,target=80
        --publish published=443,target=443 
        --mount type=bind,src=/etc/nginx.files/index.html,dst=/usr/share/nginx/html/index.html,readonly 
        --mount type=bind,src=/etc/nginx.files/styles.css,dst=/usr/share/nginx/html/styles.css,readonly
        nginx:latest
      when: hostvars['web1.internal-cloud'].nginx_service_check.stdout != ""