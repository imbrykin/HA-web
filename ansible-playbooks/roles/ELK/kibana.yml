---
- name: Install and configure Kibana in Docker
  hosts: kibana.internal-cloud
  become: yes
  tasks:
    - name: Check if containerd.io is installed
      shell: dpkg -l | grep containerd.io
      register: containerd_installed
      ignore_errors: true

    - name: Remove containerd.io if installed
      apt:
        name: containerd.io
        state: absent
      when: containerd_installed.rc == 0

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker if not already installed
      apt:
        name: docker.io
        state: present

    - name: Check if Kibana container is already pulled
      command: docker ps --filter "name=kibana"
      register: kibana_container
      ignore_errors: true

    - name: Remove existing kibana service if it exists
      command: docker rm kibana --force
      when: kibana_container.stdout != ""
      ignore_errors: true

    - name: Re-check if kibana service exists after removal
      command: docker ps --filter "name=kibana"
      register: kibana_container
      failed_when: false
      changed_when: false

    - name: Check if kibana image is existing
      command: docker image ls --filter "reference=kibana"
      register: kibana_image
      ignore_errors: false

    - name: Pull Kibana image if not present
      command: docker pull kibana:8.15.1
      when: kibana_image.stdout == ""

    - name: Ensure Kibana config directory exists
      file:
        path: /opt/kibana/config
        state: directory
        owner: root
        group: root
        mode: '0766'

    - name: Render Kibana configuration from template
      template:
        src: /HA-web/ansible-playbooks/templates/ELK/kibana.yml.j2
        dest: /opt/kibana/config/kibana.yml
        owner: root
        group: root
        mode: 0766

    - name: Stop existing Kibana container if running
      community.docker.docker_container:
        name: kibana
        state: stopped
        force_kill: yes
      when: docker_container_info.kibana.state == "running"
      ignore errors: true

    - name: Run Kibana container with custom config
      community.docker.docker_container:
        name: kibana
        image: kibana:8.15.1
        state: started
        restart_policy: always
        ports:
          - "5601:5601"
        volumes:
          - /opt/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
        env:
          - ELASTICSEARCH_HOSTS=https://elastic.internal-cloud:9200