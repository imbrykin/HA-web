---
- name: Deploy Zabbix Server and Web Interface on Zabbix Host
  hosts: monitoring
  become: yes
  vars_prompt:
    - name: "mysql_root_password"
      prompt: "Enter MySQL root password"
      private: yes

    - name: "mysql_zabbix_password"
      prompt: "Enter MySQL password for Zabbix"
      private: yes

  tasks:
    - name: Check if containerd.io is installed
      shell: dpkg -l | grep containerd.io
      register: containerd_installed
      ignore_errors: true

    - name: Remove containerd.io if installed
      apt:
        name: containerd.io
        state: absent
      when: containerd_installed.rc == 0

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker if not already installed
      apt:
        name: docker.io
        state: present

    - name: Pull Zabbix server image
      command: docker pull zabbix/zabbix-server-mysql:alpine-7.0-latest

    - name: Pull MySQL image
      command: docker pull mysql:8.0-oracle

    - name: Pull Zabbix web interface image
      command: docker pull zabbix/zabbix-web-nginx-mysql:alpine-7.0-latest

    - name: Check and remove existing MySQL container using template
      template:
        src: '/HA-web/ansible-playbooks/templates/zabbix/remove_mysql.j2'
        dest: /tmp/remove_mysql.sh
        mode: '0755'

    - name: Execute the script to remove MySQL container
      command: /tmp/remove_mysql.sh

    - name: Start MySQL container
      command: >
        {{ lookup('template', '/HA-web/ansible-playbooks/templates/zabbix/start_mysql_container.j2') }}
      # args:
      #   creates: /var/lib/mysql

    # - name: Wait for MySQL to be ready
    #   command: sleep 20

    - name: Check if MySQL container is running using template
      template:
        src: '/HA-web/ansible-playbooks/templates/zabbix/check_mysql_running.j2'
        dest: /tmp/check_mysql_running.sh
        mode: '0755'

    - name: Execute the script to check MySQL container status
      command: /tmp/check_mysql_running.sh
      register: mysql_running
      failed_when: mysql_running.rc != 0

    - name: Check and remove existing Zabbix containers using template
      template:
        src: '/HA-web/ansible-playbooks/templates/zabbix/remove_zabbix.j2'
        dest: /tmp/remove_zabbix.sh
        mode: '0755'

    - name: Execute the script to remove Zabbix containers
      command: /tmp/remove_zabbix.sh

    - name: Start Zabbix Server container
      command: >
        {{ lookup('template', '/HA-web/ansible-playbooks/templates/zabbix/start_zabbix_server_container.j2') }}

    - name: Start Zabbix Web interface container
      command: >
        {{ lookup('template', '/HA-web/ansible-playbooks/templates/zabbix/start_zabbix_web_container.j2') }}

# - name: Install and configure Zabbix Agent on other nodes
#   hosts: docker_swarm_manager,docker_swarm_workers,elk
#   become: yes
#   tasks:
#     - name: Add Zabbix repository
#       apt_repository:
#         repo: "deb http://repo.zabbix.com/zabbix/7.0/ubuntu $(lsb_release -cs) main"
#         state: present
#         filename: zabbix

#     - name: Add Zabbix public GPG key
#       apt_key:
#         url: "https://repo.zabbix.com/zabbix-official-repo.key"
#         state: present

#     - name: Update apt cache
#       apt:
#         update_cache: yes

#     - name: Install Zabbix Agent
#       apt:
#         name: zabbix-agent
#         state: present

#     - name: Configure Zabbix Agent to point to Zabbix server
#       lineinfile:
#         path: /etc/zabbix/zabbix_agentd.conf
#         regexp: '^Server='
#         line: 'Server=10.10.1.100'
#         backup: yes

#     - name: Configure Zabbix Agent for active checks to Zabbix server
#       lineinfile:
#         path: /etc/zabbix/zabbix_agentd.conf
#         regexp: '^ServerActive='
#         line: 'ServerActive=10.10.1.100'
#         backup: yes

#     - name: Set the hostname for Zabbix Agent
#       lineinfile:
#         path: /etc/zabbix/zabbix_agentd.conf
#         regexp: '^Hostname='
#         line: 'Hostname={{ inventory_hostname }}'
#         backup: yes

#     - name: Enable and start Zabbix Agent service
#       systemd:
#         name: zabbix-agent
#         enabled: yes
#         state: started

#     - name: Restart Zabbix Agent to apply configuration changes
#       service:
#         name: zabbix-agent
#         state: restarted